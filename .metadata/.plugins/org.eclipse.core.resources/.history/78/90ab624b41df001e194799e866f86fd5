package com.peisia.controller;

import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.client.HttpClientErrorException;
import org.springframework.web.client.HttpServerErrorException;
import org.springframework.web.client.RestClientException;
import org.springframework.web.client.RestTemplate;

import com.peisia.dto.FgoDto;

import lombok.AllArgsConstructor;
import lombok.extern.log4j.Log4j;

@Log4j
@RequestMapping("/fgo/*")
@AllArgsConstructor
@Controller
public class FgoController {
	
//	@GetMapping("/servant")
//	public String servant() {
//		String encodedName = null;
//		try {
//			encodedName = URLEncoder.encode("마슈",StandardCharsets.UTF_8.toString());
//		} catch (UnsupportedEncodingException e1) {
//			// TODO Auto-generated catch block
//			log.info("오류남 ㅋㄷ");
//			e1.printStackTrace();
//		}
////		String name = null;
//		String API_URL = "http://api.atlasacademy.io/basic/KR/servant/search?name=800100";
//		RestTemplate restTemplate = new RestTemplate();
//		log.info(API_URL);
//		URI uri = null;
//		try {
//			uri = new URI(API_URL);
//		} catch (URISyntaxException e) {
//			e.printStackTrace();
//		}
//
//		FgoDto s = restTemplate.getForObject(uri, FgoDto.class); //	
//		log.info("======= 연결확인"+s);
//	
//		return "redirect:/";
//	}
	@GetMapping("/servant")
	public String servant() {
	    String servantName = "마슈";
	    String encodedName = null;

	    try {
	        encodedName = URLEncoder.encode(servantName, StandardCharsets.UTF_8.toString());
	    } catch (UnsupportedEncodingException e1) {
	        log.error("인코딩 오류 발생", e1);
	    }

	    String API_URL = "http://api.atlasacademy.io/basic/KR/servant/search?name=" + encodedName;
	    RestTemplate restTemplate = new RestTemplate();
	    log.info(API_URL);

	    URI uri = null;
	    try {
	        uri = new URI(API_URL);
	    } catch (URISyntaxException e) {
	        log.error("URI 구성 오류", e);
	    }

	    try {
	        ResponseEntity<FgoDto> responseEntity = restTemplate.getForEntity(uri, FgoDto.class);
	        if (responseEntity.getStatusCode() == HttpStatus.OK) {
	            FgoDto s = responseEntity.getBody();
	            if (s != null) {
	                log.info("======= 연결확인: " + s);
	            } else {
	                log.error("API 응답이 null입니다.");
	            }
	        } else {
	            log.error("API 응답 상태 코드: " + responseEntity.getStatusCodeValue());
	        }
	    } catch (HttpClientErrorException e) {
	        log.error("HTTP 클라이언트 오류 발생: " + e.getStatusCode(), e);
	    } catch (HttpServerErrorException e) {
	        log.error("HTTP 서버 오류 발생: " + e.getStatusCode(), e);
	    } catch (RestClientException e) {
	        log.error("API 호출 중 오류 발생", e);
	    }

	    return "redirect:/";
	}
	
}
