package com.peisia.controller;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.client.RestTemplate;

import com.peisia.dto.FgoDto;

import lombok.extern.log4j.Log4j;

@Log4j
@RequestMapping("/fgo/*") // 프로젝트 루트 경로 이하 /guest 상위폴더로 진입 시 여기로 진입하게 됨.
//@AllArgsConstructor // 필드 값을 매개변수로 하는 생성자를 스프링이 알아서 만들어 줌. 그리고 그런 형태의 생성자를 추가하면 스프링이 알아서 객체관리			// 해줌(@Auto.. 처럼)
@Controller
public class FgoController {
	@RequestMapping("/master")							
	public String master() {
		try {
		//// 우리나라 공공 api ////						
		//인코딩 인증키
		String API_URL = "https://api.atlasacademy.io/export/NA/nice_servant.json?id=100100";					
				// * 주의 * https 아님 http 임. https 는 인증관련 복잡한 처리를 해야함.				
	    // 얘는 key값을 통해 받아온 uri 정보를 json방식으로 uri를 압축함
		//// **** 중요 **** uri						
//		URI uri = null; //java.net.URI 임포트 하셈						
//		try {						
//			uri = new URI(API_URL);					
//		} catch (URISyntaxException e) {						
//			e.printStackTrace();					
//		}
		
		URL url = new URL(API_URL);
		// HTTP connection 설정
        HttpURLConnection connection = (HttpURLConnection)url.openConnection();
        connection.setRequestMethod("GET");

        int responseCode = connection.getResponseCode();

        BufferedReader in;
        if(responseCode == 200) {
          // responseCode 200 정상응답
          in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
        } else {
          // responseCode 200 이외의 코드가 반환되었을 경우
          in = new BufferedReader(new InputStreamReader(connection.getErrorStream()));
        }

        String inputLine;
        StringBuffer response = new StringBuffer();
        while ((inputLine = in.readLine()) != null) {
          response.append(inputLine);
          //와일문 안돌리고 원하는값만 불러와서 사용할수도 있음 이름 일치 하는거 불러오는거마냥
        }
        in.close();
        System.out.println(response.toString());
      } catch (Exception exception) {
        System.out.println(exception);
      }
		
		
//		String s = restTemplate.getForObject(uri, String.class); //						
//		log.info("========연동"+s);	
//		FgoDto f = restTemplate.getForObject(uri, FgoDto.class);
//		log.info("==== json ==== : 누굴까요? : "+f);
//		String id = f.name;
//		String className = f.className; 
//		String msg = String.format("==== json ==== : 이름 : %s 클래스 : %s", id, className);
//		log.info(msg);
		return "redirect:/";
	}
								
}
